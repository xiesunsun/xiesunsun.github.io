[
  
    {
      "title"       : "Python与java在OOP方面的差异",
      "category"    : "学习",
      "tags"        : "学习",
      "url"         : "./OOPpython.html",
      "date"        : "2021-11-17 00:00:00 +0800",
      "description" : "python！",
      "content"     : "关于类文件命名  在java中规定类文件的名称必须跟文件中唯一的一个public类的类名一样，而在python中没有这个要求，保存python类的文件名与类名没有关系,但是文件名最好有具体的含义关于python中类的格式 与其他语言类似，约定首字母大写的名称指的是类 同样具有构造函数，类变量，成员变量，类方法，成员方法 如下图 class Student: \"\"\"学生类\"\"\" count=0 def __init__(self,name,age): ''''初始化方法''' self.name=name self._age=age def getAge(self): return self.age @classmethod def getNum(cls): return cls.count 同等效果的 java代码 package test;public class Student { public static int count=0; private int age; public String name; public Student() { // TODO Auto-generated constructor stub }//无参构造方法 public Student(String name,int age) { this.name=name; this.age=age; count++; } public int getAge() { return this.age; } public static int getNum() { return count; }} 关于指向该类的实例指针this,self，以及父类的super   java中的this,表示指向该类的实例对象，python中的self表示的创建类的实例本身，super都是指向父类的实例对象 关于构造方法，其他方法  java中的构造函数分为（默认），有参（支持重载），构造函数名与类名一致  python的构造函数为__init__,其中形参selff必不可少，创建实例时不需要传入该参数，python解释器会自动传入，python类中的方法都需要显式带上self参数，通过对象调用时不用传入该参数class Student: \"\"\"学生类\"\"\" count=0 def __init__(self,name,age): ''''构造方法''' self.name=name self._age=age def getAge(self):#self必不可少 return self.age @classmethod def getNum(cls): return cls.count关于实例变量，类变量，类方法  在java中定义在类中的变量如果不是static修饰的，指的是实例变量（每个对象都会保存一份该变量，可以直接通过类名来访问）下图:Student类中的count在python中属于类变量，属于整个类，所有实例对象共同拥有一个count变量，相当于java中的实例变量（static修饰）,而age,name等在函数里通过self定义的变量称之为实例变量（需要通过实例对象来访问）。class Student: \"\"\"学生类\"\"\" count=0#类变量 def __init__(self,name,age): ''''构造方法''' self.name=name#实例变量 self._age=age def getAge(self):#self必不可少 return self.age @classmethod def getNum(cls): return cls.count  类方法:java中的类方法通过static修饰，可以通过类名直接访问,python中的类方法和实例方法相似，它最少也要包含一个参数cls，Python 会自动将类本身绑定给 cls 参数和实例方法最大的不同在于，类方法需要使用＠classmethod修饰符进行修饰,如上图的getNum() 方法  在根据类创建完成的对象仍可以通过对象名.属性名的情况下增加对于该实例变量的属性，如下例a=Student('xiaoming','17')a.sex='男'print(a.age)关于对象的创建  java可以通过new关键字来实现对象的实例化python则通过类名来进行创建//java创建学生对象 Student a=new Student(\"xiaoming\",17);#python创建学生对象 a=Student('xiaoming','17')关于访问权限修饰符java中有default,private,protected,public访问修饰符来控制类中属性的访问python默认情况下类的所有成员变量都是public，如果需要，可以通过变量名前添加单个前缀_实现protected的效果，通过添加两个前缀__实现private效果，例如上面python student类的age属性//java访问修饰权限 public static int count=0; private int age; public String name;#python访问修饰权限 self.name=name self._age=ageps:对于python中”private”修饰的变量你仍然可以同过对象名._类名__属性名的方式进行访问操作关于属性，方法的调用  java，python都可以通过实例对象.属性名(方法名)访问或者调用可见的方法关于类继承  python通过类名后的括号()来实现，java通过关键字extend来实现，python也支持多继承class gstudent(Student): def __init__(self,name,age): super().__init__(name,age)ps:运行时，会把该文件中所包含的类给事先加载到frame里去参考博客Python中self用法详解Python实例方法、静态方法和类方法详解（包含区别和用法)总结Java和Python面向对象的不同点python与java面向对象的比较"
    } ,
  
    {
      "title"       : "生日快乐！",
      "category"    : "感想",
      "tags"        : "感想",
      "url"         : "./%E4%B8%8D%E7%9F%A5%E9%81%93%E6%80%8E%E4%B9%88%E8%AF%B4%E5%87%BA%E5%8F%A3.html",
      "date"        : "2021-11-06 00:00:00 +0800",
      "description" : "祝你生日快乐！",
      "content"     : "BGM开启一下，可能更好阅读一下(^_−)☆  其实想了很久，不知道要不要写这些话，会不会太矫情，会不会打扰到你的生活，但是我还是写了这些话，我也想让你看到我的想法  和你分开之后，我多次问自己为什么？后悔吗？我每次都在用一个借口来逃避，我不是一个很擅长和别人打交道的人，我很内向，有时候甚至有些自卑，可能别人看不出来，但是每当我自己一个人的时候，我就会感到自己的渺小与无能。  我必须要和你分开，和我在一起你只会不开心，我根本就没有办法和别人分享我心里的事情，每当QQ列表或者微信列表中出现你的消息时，我都会激动的拿起手机，仔细思考该如何回复你，才会让你对我产生好感，有时候想着想着，你就发了另一条消息，我只得继续去思考如何去回复下一条消息。可能这就是我老是不回别人消息的原因，有时候担心回复不好，不如不回复，这样可能你我都会轻松点  我想慢慢变强，想可以真正做一个王子，而不是在阴冷的角落孤独的蹲着。我想给你真正的快乐，给你真正的幸福，正如我经常说的那句话“愿你是阳光，明媚不忧伤！”在这期间我也曾经常去你的空间看你的动态，看你的朋友圈，登陆王者看你最近有没有打游戏，什么时候睡的，但是我慢慢发现你王者里有了别人，他会带你飞，他不会输，他能让你跟你的朋友玩的很开心，我越发觉得我好像彻底失去你了，没有机会了，可能人一旦放弃，就再也找不回来了，我安慰自己没事，也许会有人真的喜欢这样无能的我，想到这就又想起你之前和我说的话，愿意慢慢等我变得更外向，心中升起了一点点哀怨，然后就是释然，不等我其实也挺好的，这样可能你才能真正的开心快乐，而我也可以慢慢的去寻找孤独，去体会孤独了。  我处理完我所有不喜欢的事情，去做我喜欢的事，参加数学建模和别人沟通交流，参加体育活动，学生会，党员培训，协会交接，努力学习，我非常外向的去和别人说话，得到的却大多不如意，但是我仍然继续坚持下去，我相信我会变得更好的，但是直到兰正和我说的一句话，喜欢一个人关键在于你的态度，你不用想的那么多。我原来可以用我卑微的力量去守护一个人的，但我没有做，而处处伤害了她，我很忧愁在操场里跑了好几圈！  大三开学，我成为了班助，接触了好多大一新生他们很可爱，但是当他们问道我有没有女朋友的时候，我总是很忧伤，没有，可能以后再也不会有了。我一直用自己阳光温暖别人，却忘记了温暖我身旁最重要的人。  说了太多啰里吧嗦的，明天就是你的生日了，祝你生日快乐！开心最重要，说这些话想让你也知道，你很优秀！一定要开心快乐！  愿你是阳光，明媚不忧伤！"
    } ,
  
    {
      "title"       : "MARKDOWN用法",
      "category"    : "观点",
      "tags"        : "杂, 教程",
      "url"         : "./markdown.html",
      "date"        : "2021-11-06 00:00:00 +0800",
      "description" : "就是一个简单的介绍操作！",
      "content"     : "标题二级标题三级标题四级标题依次类推 正文直接写就好了，但要注意如果要换行的话，是需要空一行才可以的！ #include&lt;stdio.h&gt; int main(void) { for(int i=0;i&lt;100;i++) { printf(\"now value is %d\\n\",i); } return 0; } python代码可以这么写 def printnum(): for i in range(10): if i%2==0: print(i) else: continueif __name__==\"__main__\": num=[x for x in range(100)] printnum() 我只能说一句话markdown太厉害了，牛！多级列表的产生 注意需要在序号的后面需要加上一个空格才会产生列表的效果 产生多级的效果需要在指定的上一级标签后回车，加tab键产生效果 无序列表的操作 一个横线加上一个空格就可以生成 同样是支持多级的无序列表的，与有序列表的操作是相同的 这样是加粗的操作，要用到两个星号这样是斜体的操作，注意只需要用到一个星号这样是既加粗有斜体的操作插入表格的操作 表头 表头 表格内容 可以写的不整齐但是它是会自动把你变成一个封闭的表格的 插入图片需要注意相应的路径，可以使用插件past image 还是挺好用的！给指定文字超链接例如这里我给百度这个文字超链接"
    } 
  
]
